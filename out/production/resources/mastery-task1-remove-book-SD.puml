@startuml
title RemoveBookFromCatalog

actor Client
participant "Load Balancer / ECS" as LoadBalancer_ECS
participant RemoveBookFromCatalogAvtivity
participant CatalogDAO
database DynamoDB

Client -> LoadBalancer_ECS : HTTP Request
activate Client
LoadBalancer_ECS -> RemoveBookFromCatalogAvtivity : execute(RemoveBookFromCatalogRequest)
activate LoadBalancer_ECS
RemoveBookFromCatalogAvtivity -> CatalogDAO : removeBookFromCatalog(bookId)
activate RemoveBookFromCatalogAvtivity
CatalogDAO -> DynamoDB : getBookFromCatalog(bookId)
activate CatalogDAO


alt if book does not exist or book is not active
    RemoveBookFromCatalogAvtivity <-- CatalogDAO : throw BookNotFoundException
    LoadBalancer_ECS <-- RemoveBookFromCatalogAvtivity : transform to KindlePublishingClientException
    Client <-- LoadBalancer_ECS : 400 Repsonse
else otherwise, continue
end

CatalogDAO <- DynamoDB : Book Data
activate DynamoDB
RemoveBookFromCatalogAvtivity <- CatalogDAO : return CatalogItemVersion
LoadBalancer_ECS <- RemoveBookFromCatalogAvtivity : return RemoveBookFromCatalogResponse
Client <- LoadBalancer_ECS : 200 Response






@enduml